version: '3.8'
services:
  zookeeper:
    image: bitnami/zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - 2181:2181

  kafka:
    image: bitnami/kafka
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_HEAP_OPTS=-Xmx512M -Xms512M
    ports:
      - 9092:9092

mqtt_kafka_bridge:
  image: mosquitto-kafka-bridge
  environment:
    - MQTT_BROKER_HOST=your_raspberry_pi_mqtt_broker_ip
    - MQTT_BROKER_PORT=1883
    - MQTT_TOPIC=events
    - KAFKA_BROKER=kafka:9092
    - KAFKA_TOPIC=events
  depends_on:
    - kafka

#   kafka:
#     image: bitnami/kafka:latest
#     container_name: kafka
#     ports:
#       - "9092:9092"
#     environment:
#       KAFKA_BROKER_ID: 1
#       KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#       KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
#       KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
#       KAFKA_HEAP_OPTS: -Xmx512M -Xms512M
#     volumes:
#       - /var/run/docker.sock:/var/run/docker.sock
#     depends_on:
#       - zookeeper
#     networks:
#       - iot-network

#   telegraf:
#     image: telegraf:latest
#     container_name: telegraf
#     volumes:
#       - ./conf/telegraf.conf:/etc/telegraf/telegraf.conf
#     depends_on:
#       - kafka
#     networks:
#       - iot-network

#   grafana:
#     image: grafana/grafana:latest
#     container_name: grafana
#     ports:
#       - "3000:3000"
#     volumes:
#       - ./conf/grafana.ini:/etc/grafana/grafana.ini
#       - grafana-storage:/var/lib/grafana
#     depends_on:
#       - kafka
#     networks:
#       - iot-network

# networks:
#   iot-network:
#     driver: bridge

# volumes:
#   grafana-storage:

        
#  sudo docker compose -f docker-compose.yml up --pull always