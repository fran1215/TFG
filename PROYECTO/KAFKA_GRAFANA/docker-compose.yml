version: '2'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
  
  kafka:
    image: confluentinc/cp-kafka:7.4.4
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    
  kafka-mqtt-bridge:
    image: kafka-mqtt-bridge:latest
    links:
        - "kafka:kafkabroker"
    depends_on:
        - kafka
      

    

#   kafka:
#     image: bitnami/kafka:latest
#     container_name: kafka
#     ports:
#       - "9092:9092"
#     environment:
#       KAFKA_BROKER_ID: 1
#       KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#       KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
#       KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
#       KAFKA_HEAP_OPTS: -Xmx512M -Xms512M
#     volumes:
#       - /var/run/docker.sock:/var/run/docker.sock
#     depends_on:
#       - zookeeper
#     networks:
#       - iot-network

#   telegraf:
#     image: telegraf:latest
#     container_name: telegraf
#     volumes:
#       - ./conf/telegraf.conf:/etc/telegraf/telegraf.conf
#     depends_on:
#       - kafka
#     networks:
#       - iot-network

#   grafana:
#     image: grafana/grafana:latest
#     container_name: grafana
#     ports:
#       - "3000:3000"
#     volumes:
#       - ./conf/grafana.ini:/etc/grafana/grafana.ini
#       - grafana-storage:/var/lib/grafana
#     depends_on:
#       - kafka
#     networks:
#       - iot-network

# networks:
#   iot-network:
#     driver: bridge

# volumes:
#   grafana-storage:

        
#  sudo docker compose -f docker-compose.yml up --pull always